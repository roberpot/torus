/*
 * This file is part of Torus.
 * Torus is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * Torus is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License
 * along with Torus. If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * Based on spherescripts from the sphereserver project.
 * https://github.com/Sphereserver/Scripts
 */

[DEFNAME admin_options]
// If you do not want clients of lower or equal plevel see the IP addresses
// of clients of equal or higher plevel, set this to 1
// (does not apply to plevel 7)
admin_hideips            = 0;
// If you do not want clients to see clients with a higher plevel that are
// invisible (.invis) in the list, set this to 1
admin_hidehighpriv       = 0;
// When a flag is set or unset, it is sometimes necessary for the character
// to be updated for the new setting to take effect. The settings below
// control whether to call UPDATEX, UPDATE or RESENDTOOLTIP on the character
// based on which flags have been modified.
admin_updatexflags       = statf_invisible|statf_insubstantial|statf_hidden;
admin_updateflags        = statf_invul|statf_freeze|statf_stone|statf_hallucinating|statf_poisoned|statf_criminal|statf_nightsight|statf_hovering;
admin_resendtooltipflags = statf_incognito;

[DEFNAME admin_strings]
// Titles for privilege levels
admin_plevel[0]  = "Guest";
admin_plevel[1]  = "Player";
admin_plevel[2]  = "Counselor";
admin_plevel[3]  = "Seer";
admin_plevel[4]  = "Game Master";
admin_plevel[5]  = "Developer";
admin_plevel[6]  = "Administrator";
admin_plevel[7]  = "Owner";
// Titles for UO expansion
admin_resdisp[0]  = "Pre-T2A";
admin_resdisp[1]  = "The 2nd Age";
admin_resdisp[2]  = "Lord Blackthorn's Revenge";
admin_resdisp[3]  = "Age Of Shadows";
admin_resdisp[4]  = "Samurai Empire";
admin_resdisp[5]  = "Mondain's Legacy";
admin_resdisp[6]  = "Kingdom Reborn";
admin_resdisp[7]  = "Stygian Abyss";
admin_resdisp[8]  = "High Seas";
// Titles for flags, copied from axis (slightly modified)
admin_flag[1]    = "Invulnerability";
admin_flag[2]    = "Dead";
admin_flag[3]    = "Paralyzed";
admin_flag[4]    = "Invisible";
admin_flag[5]    = "Sleeping";
admin_flag[6]    = "Warmode";
admin_flag[7]    = "Reactive Armor";
admin_flag[8]    = "Poisoned";
admin_flag[9]    = "Nightsight";
admin_flag[10]   = "Magic Reflect";
admin_flag[11]   = "Polymorphed";
admin_flag[12]   = "Incognito";
admin_flag[13]   = "Spirit Speak";
admin_flag[14]   = "Insubstantial";
admin_flag[15]   = "Emote";
admin_flag[16]   = "Comm Crystal";
admin_flag[17]   = "Has Shield";
admin_flag[18]   = "Can move with bow";
admin_flag[19]   = "Stoned";
admin_flag[20]   = "Hovering";
admin_flag[21]   = "Flying";
admin_flag[22]   = "";  // unused
admin_flag[23]   = "Hallucinating";
admin_flag[24]   = "Hidden";
admin_flag[25]   = "Indoors";
admin_flag[26]   = "Criminal";
admin_flag[27]   = "Conjured (summoned)";
admin_flag[28]   = "Pet";
admin_flag[29]   = "Spawned";
admin_flag[30]   = "Save parity";
admin_flag[31]   = "Ridden";
admin_flag[32]   = "Mounted on horseback";
// Don't edit below this line unless you know what you are doing

[FUNCTION admin]
if (getreftype == def.tref_serv) {
    //serv.console C
    return;
} elseif ( ! isplayer ) {
    return;
}
SRC.dialogclose(d_sphereadmin);
CTAG.admin_numplayers = 0;
CTAG.admin_page = 1;
SERV.allclients(admin_getplayers);
CTAG.admin_numpages = ((CTAG0.admin_numplayers - 1) / 15) + 1; // 15 players per page
dialog(d_sphereadmin);

[FUNCTION admin_getplayers]
// List players in CTAGs on the caller
if ((account.plevel > SRC.account.plevel) && (flags & statf_insubstantial) && (def0.admin_hidehighpriv)) {
   return;
} else {
   SRC.CTAG0.admin_numplayers += 1;
   SRC.CTAG.admin_p[SRC.CTAG0.admin_numplayers] = SELF;
}


/*
TAG: Persistent object-related variables (And some other exceptions, like accounts).
CTAG: Non-persistent client-related variables.
VAR: Persistent server-related variables.

LOCAL: Local context variables.
REF[0-255]: Local context pointers.
OBJ: Global context pointer.

SRC, ACT, ARGO: Trigger-related pointers.
*/
[DIALOG d_sphereadmin]
location(0,21);
// Let's not break some (perhaps) scripts using OBJ
LOCAL.oldobj = OBJ;
page(0); // Basic layout
resizepic(0, 0, 2620, 650, 397); // Background
gumppictiled(5, 5, 640, 385, 2604);
gumppictiled(5, 5, 640, 25, 2624);
gumppictiled(5, 370, 640, 22, 2624);
gumppictiled(5, 35, 640, 330, 2624);
checkertrans(5, 5, 640, 387);
dtext(10, 7, 0c1, "SphereServer " + SRC.version + " Admin Panel (" + SERV.servname + ") - Clients: " + CTAG0.admin_numplayers);
button(615, 5, 4017, 4018, 1, 0, 0);
page(1); // Player data
dtext(45, 35, 025, "Account Name");
dtext(170, 35, 025, "Character Name");
dtext(380, 35, 025, "IP Address");
dtext(520, 35, 025, "Location");
dtext(540, 35, 025, "PLevel");
admin_renderdialog();
OBJ = LOCAL.oldobj;
if (CTAG0.admin_page > 1) {
   // Back button
   button(5, 370, 4014, 4015, 1, 0, 1);
}
if (CTAG0.admin_page < CTAG0.admin_numpages) {
   // Forward button
   button(615, 370, 4005, 4006, 1, 0, 2);
}
dtext(275, 370, 0c1, "Page " + CTAG0.admin_page + " / " + CTAG0.admin_numpages);

[FUNCTION admin_renderdialog]
LOCAL.y = 55;
for(LOCAL.x = ((CTAG0.admin_page - 1) * 15) + 1; LOCAL.x <= CTAG0.admin_page * 15; LOCAL.x++) {
   if (LOCAL.x > CTAG0.admin_numplayers) {
      return;
   }
   OBJ = CTAG0.admin_p[LOCAL.x];
   if (OBJ.flags & statf_insubstantial) {
      LOCAL.hue = 0450;
   } else {
      LOCAL.hue = 0480;
   }
   button(10, LOCAL.y, 4005, 4006, 1, 0, 1000 + LOCAL.x);
   dtext(45, LOCAL.y, LOCAL.hue, "<QVAL <OBJ.ACCOUNT.PLEVEL>==0?(-):<QVAL <OBJ.ACCOUNT.PLEVEL>==1?:(+)>>" + OBJ.account);
   dtext(170, LOCAL.y, LOCAL.hue, "<QVAL <OBJ.FINDID.i_rune_incognito.UID> ? <OBJ.FINDID.i_rune_incognito.NAME> : <obj.name>>");
   // Hide IP address to people of lower or equal privilege, if desired
   if ((OBJ.uid != uid) && (account.plevel <= OBJ.account.plevel) && (def0.admin_hideips) && (account.plevel != 7)) {
      dtext(380, LOCAL.y, LOCAL.hue, "x.x.x.x");
   } else {
      dtext(380, LOCAL.y, LOCAL.hue, OBJ.account.lastip);
   }
   dtext(520, LOCAL.y, LOCAL.hue, OBJ.p.x + "," + OBJ.p.y + "," + OBJ.p.z + "," + OBJ.p.m);
   LOCAL.y += 20;
}

[BUTTONEVENTS d_sphereadmin]
ON_BUTTON(0) {
    clear(CTAG.admin_p);
    clear(CTAG.admin_numplayers);
    clear(CTAG.admin_numpages);
}
ON_BUTTON(1) { // Back button
CTAG.admin_page -= 1;
    if (CTAG0.admin_page < 1) {
        // Bad! And shouldnt happen
        sysmessage("Error: admin_page value went too low, please report (" + CTAG.admin_page + " / " + CTAG.admin_numpages + ")");
        CTAG.admin_page = 1;
    }
    dialog(d_sphereadmin);
}
ON_BUTTON(2) { // Forward button
    CTAG.admin_page += 1;
    if (CTAG0.admin_page > CTAG0.admin_numpages) {
        // Bad! Should also not happen
        sysmessage("Error: admin_page value went too high, please report (" + CTAG0.admin_page + " / " + CTAG0.admin_numpages + ")");
        CTAG.admin_page = CTAG0.admin_numpages;
    }
    dialog(d_sphereadmin);
}
ON_BUTTONS(1001, 65535) { // Player buttons
//   try uid.<ctag.admin_p<eval <argn> - 1000>>.dialog d_sphereplayertweak, 2
    LOCAL.x = 1;
}

[DIALOG d_sphereplayertweak]
location(0, 21);
src.dialogclose(d_sphereplayertweak);
page(0); // Basic layout
resizepic(0, 0, 2620, 650, 397); // Background
gumppictiled(5, 5, 640, 385, 2604);
gumppictiled(5, 5, 640, 25, 2624);
gumppictiled(5, 35, 140, 355, 2624);
gumppictiled(150, 35, 495, 355, 2624);
checkertrans(5, 5, 640, 387);
dtext(10, 7, 0c1, "SphereServer " + SRC.version + " Admin Panel (" + serv.servname + ") - Tweaking Client");
button(615, 5, 4017, 4018, 1, 0, 0);
button(585, 5, 4008, 4009, 1, 0, 1);
button(5, 35, 4005, 4006, 0, 1, 0);
dtext(40, 37, 0480, "Client info");
button(5, 55, 4005, 4006, 0, 2, 0);
dtext(40, 57, 0480, "Client actions");
button(5, 77, 4005, 4006, 1, 0, 2);
dtext(40, 77, 0480, "Client notes");
button(5, 117, 4005, 4006, 0, 4, 0);
dtext(40, 117, 0480, "Character info");
button(5, 137, 4005, 4006, 0, 3, 0);
dtext(40, 137, 0480, "Status flags");
page(1);
dtext(160, 35, 0c1, "Name:");
dtext(300, 35, 0480, name);
dtext(460, 35, 0c1, "Uid:");
dtext(500, 35, 0480, uid);
dtext(160, 55, 0c1, "Account Name:");
dtext(300, 55, 0480, account.name);
dtext(160, 75, 0c1, "Title:");
dtext(300, 75, 0480, title);
dtext(160, 95, 0c1, "PLevel:");
dtext(300, 95, 0480, account.plevel + " (" + admin_strings.admin_plevel[account.plevel] + ")");
dtext(160, 135, 0c1, "Client Version:");
dtext(300, 135, 0480, clientversion + " / " + reportedcliver);
dtext(160, 155, 0c1, "Resdisp:");
dtext(300, 155, 0480, account.resdisp + " (" + admin_strings.admin_resdisp[account.resdisp] + ")");
dtext(160, 195, 0c1, "First login:");
dtext(300, 195, 0480, account.firstconnectdate + " from " + ((SRC.account.plevel <= account.plevel) && admin_options.admin_hideips && (SRC.account.plevel != 7) ? "x.x.x.x" : account.firstip));
dtext(160, 215, 0c1, "Last login:");
dtext(300, 215, 0480, account.lastconnectdate + " from " + ((SRC.account.plevel <= account.plevel) && admin_options.admin_hideips && (SRC.account.plevel != 7) ? "x.x.x.x" : account.lastip));
dtext(160, 255, 0c1, "Location:");
dtext(300, 255, 0480, p.x + "," + p.y + "," + p.z + "," + p.m);
dtext(160, 295, 0c1, "Kills:");
dtext(300, 295, 0480, kills);
dtext(360, 295, 0c1, "Deaths:");
dtext(540, 295, 0480, deaths);
dtext(160, 315, 0c1, "Food level:");
dtext(300, 315, 0480, food);
page(2);
button(160, 40, 4005, 4006, 1, 0, 21);
dtext(200, 40, 0480, "Go to this player");
button(160, 60, 4005, 4006, 1, 0, 22);
dtext(200, 60, 0480, "Turn invisible and go to this player");
button(160, 80, 4005, 4006, 1, 0, 23);
dtext(200, 80, 0480, "Summon this player to you");
button(160, 100, 4005, 4006, 1, 0, 29);
dtext(200, 100, 0480, "Summon this player to you in a cage");
button(160, 120, 4005, 4006, 1, 0, 24);
dtext(200, 120, 0480, "Follow this player");
button(160, 140, 4005, 4006, 1, 0, 25);
dtext(200, 140, 0480, (account.jail ? "Forgive" : "Jail") + " this player");
button(160, 160, 4005, 4006, 1, 0, 26);
dtext(200, 160, 0480, ((flags & statf_dead) ? "Resurrect" : "Kill") + " this player");
button(160, 180, 4005, 4006, 1, 0, 27);
dtext(200, 180, 0480, "Disconnect this player from the server");
button(160, 200, 4005, 4006, 1, 0, 28);
dtext(200, 200, 025, "Disconnect and ban this player from the server");
page(3);
LOCAL.flag = 01;
LOCAL.ox = 160;
LOCAL.oy = 40;

for (LOCAL.x = 0; LOCAL.x <= 31; LOCAL.x++) {
   if (!isempty(admin_strings.admin_flags[LOCAL.x + 1])) {
      checkbox(LOCAL.ox, LOCAL.oy, 210, 211, hval(flags & LOCAL.flag), 300 + LOCAL.x);
      dtext(LOCAL.ox + 40, LOCAL.oy, 0480, admin_strings.admin_flag[LOCAL.x + 1]);
      LOCAL.oy += 20;
      if (LOCAL.oy > 360) {
          LOCAL.ox += 200;
          LOCAL.oy = 40;
      }
    }
   // Workaround for sphere bug - local.flag=<hval <local.flag> << 1> attempts to evaluate << !
   LOCAL.flag = hval(LOCAL.flag << 1);
}
button(360, 360, 4005, 4006, 1, 0, 31);
dtext(400, 360, 0c1, "Set flags");
page(4);
dtext(160, 35, 0c1, "Name:");
dtext(300, 35, 0480, name);
dtext(460, 35, 0c1, "Uid:");
dtext(500, 35, 0480, uid);
dtext(160, 55, 0c1, "Title:");
dtext(300, 55, 0480, title);
dtext(160, 95, 0c1, "Strength:");
dtext(300, 95, 0480, str);
dtext(360, 95, 0c1, "Hitpoints:");
dtext(540, 95, 0480, hits + "/" + maxhits);
dtext(160, 115, 0c1, "Dexterity:");
dtext(300, 115, 0480, dex);
dtext(360, 115, 0c1, "Stamina:");
dtext(540, 115, 0480, stam + "/" + maxstam);
dtext(160, 135, 0c1, "Intelligence:");
dtext(300, 135, 0480, int);
dtext(360, 135, 0c1, "Mana:");
dtext(540, 135, 0480, mana + "/" + maxmana);
dtext(160, 155, 0c1, "Karma:");
dtext(300, 155, 0480, karma);
dtext(360, 155, 0c1, "Fame:");
dtext(540, 155, 0480, fame);

[BUTTONEVENTS d_sphereplayertweak]
ON_BUTTONS(0, 1) {
    SRC.d_sphereadmin();
}
ON_BUTTON(2) {
    d_sphereplayernotes();
}
ON_BUTTON(21) {
    SRC.go(p);
}
ON_BUTTON(22) {
   SRC.invis(1);
   SRC.go(p);
}
ON_BUTTON(23) {
   go(SRC.p);
}
ON_BUTTON(24) {
   if (SRC.uid != uid) {
       SRC.follow(uid);
   }
}
ON_BUTTON(25) {
   if (account.jail) {
      forgive();
   } else {
      jail();
   }
}
ON_BUTTON(26) {
   if (flags & statf_dead) {
      resurrect();
   } else {
      hits = 0;
      // Use kill here if you want the lightning effect
   }
}
ON_BUTTON(27) {
   disconnect();
}
ON_BUTTON(28) {
   kick();
}
ON_BUTTON(29) {
   summoncage();
}
ON_BUTTON(31) {
    LOCAL.updatexflags = flags & admin_options.admin_updatexflags;
    LOCAL.updateflags = flags & admin_options.admin_updateflags;
    LOCAL.resendtooltipflags = flags & admin_options.admin_resendtooltipflags;
    LOCAL.flag = 01;
    for(LOCAL.x = 0; LOCAL.x <= 31; LOCAL.x++) {
        if (!isempty(admin_strings.admin_flags[LOCAL.x + 1])) {
            if (argchk[300 + LOCAL.x]) {
                flags |= LOCAL.flag;
            } else {
                flags &= ~LOCAL.flag;
            }
        }
    }
    local.FLAG = LOCAL.flag << 1;
    if ((flags & admin_options.admin_updatexflags) != LOCAL.updatexflags) {
        updatex();
    } elseif ((flags & admin_options.admin_updateflags) != LOCAL.updateflags) {
        update();
    } elseif ((flags & admin_options.admin_resendtooltipflags) != LOCAL.resendtooltipflags) {
        resendtooltip();
    }
    SRC.sysmessage("Flags modified!");
}

[DIALOG d_sphereplayernotes]
location(0, 21);
SRC.dialogclose(d_sphereplayernotes);
page(0); // Basic layout
resizepic(0, 0, 2620, 650, 397); // Background
gumppictiled(5, 5, 640, 385, 2604);
gumppictiled(5, 5, 640, 25, 2624);
gumppictiled(5, 35, 140, 355, 2624);
gumppictiled(150, 35, 495, 330, 2624);
gumppictiled(150, 370, 495, 20, 2624);
checkertrans(5, 5, 640, 387);
dtext(10, 7, 0c1, "SphereServer " + SRC.version + " Admin Panel (" + serv.servname + ") - Account Notes");
button(615, 5, 4017, 4018, 1, 0, 0);
button(585, 5, 4008, 4009, 1, 0, 1);
button(5, 35, 4005, 4006, 1, 0, 2);
dtext(40, 37, 0480, "Client info");
button(5, 55, 4005, 4006, 1, 0, 3);
dtext(40, 57, 0480, "Client actions");
button(5, 77, 4005, 4006, 0, 1, 0);
dtext(40, 77, 0480, "Client notes");
button(5, 117, 4005, 4006, 1, 0, 4);
dtext(40, 117, 0480, "Character info");
button(5, 137, 4005, 4006, 1, 0, 5);
dtext(40, 137, 0480, "Status flags");
dtext(200, 35, 0c1, "Here you can review and/or add notes to this player's account.");
dtext(200, 55, 0c1, "This account currently has " + account.TAG.numnotes + " notes. Showing 4 notes per page.");
button(160, 75, 4005, 4006, 1, 0, 10);
dtext(200, 75, 0480, "Add note to this account (" + account + ")");
if (account.TAG.numnotes > 0) {
    LOCAL.current_page = 1;
    LOCAL.oy = 120;
    page(1);
    for(LOCAL.x = 1; LOCAL.x <= account.TAG.numnotes; LOCAL.x++) {
        if (LOCAL.oy > 300) {
            LOCAL.oy = 120;
            LOCAL.current_page += 1;
            button(615, 370, 4005, 4006, 0, LOCAL.current_page, 0); // Forward button
            page(LOCAL.current_page);
            button(150, 370, 4014, 4015, 0, LOCAL.current_page - 1, 0); // Back button
        }
        resizepic(155, LOCAL.oy, 9350, 480, 50);
        dtext(160, LOCAL.oy, 0, "Added by " + account.TAG.note_by[LOCAL.x] + " at " + account.TAG.note_time[LOCAL.x]);
        dtext(160, LOCAL.oy + 15, 0480, account.TAG.note[LOCAL.x]);
        button(600, LOCAL.oy, 4017, 4018, 1, 0, 10 + LOCAL.x);
        LOCAL.oy += 60;
    }
}

[BUTTONEVENTS d_sphereplayernotes]
ON_BUTTONS(0,1) {
    SRC.d_sphereadmin();
}
ON_BUTTON(2) {
    d_sphereplayertweak(1);
}
ON_BUTTON(3) {
    d_sphereplayertweak(2);
}
ON_BUTTON(4) {
    d_sphereplayertweak(4);
}
ON_BUTTON(5) {
    d_sphereplayertweak(3);
}
ON_BUTTON(10) {
   if (SRC.account.plevel > account.plevel) {
      SRC.CTAG.notefor = uid;
      SRC.promptconsole(admin_addnote, "Enter note:");
   } else {
      SRC.sysmessage("You can't add notes to a plevel higher than you");
      SRC.d_sphereplayernotes();
   }
}
ON_BUTTONS(11, 500) {
   if (SRC.account.plevel > account.plevel) {
      SRC.CTAG.notefor = uid;
      src.admin_removenote(ARGV[0] - 10);
   } else {
      SRC.sysmessage("You can't change notes to a plevel higher than you");
      src.d_sphereplayernotes();
   }
}

[FUNCTION admin_removenote]
LOCAL.note = ARGV[0];
LOCAL.oldobj = OBJ;
OBJ = CTAG.notefor;
if (LOCAL.note < OBJ.account.TAG.numnotes ) {
    ARRAY_REMOVE(OBJ.account.TAG.note, LOCAL.note);
    ARRAY_REMOVE(OBJ.account.TAG.note_by, LOCAL.note);
    ARRAY_REMOVE(OBJ.account.TAG.note_time, LOCAL.note);
}
OBJ.account.TAG.numnotes--;
sysmessage("Note removed from " + obj.account + "!");
OBJ.dialog(d_sphereplayernotes);
OBJ = LOCAL.oldobj;

[FUNCTION admin_addnote]
LOCAL.oldobj = OBJ;
OBJ = CTAG.notefor;
LOCAL.name = name;
OBJ.account.TAG.numnotes++;
ARRAY_PUSH(OBJ.account.TAG.note, ARGV[0]);
ARRAY_PUSH(OBJ.account.TAG.note_by, LOCAL.name);
ARRAY_PUSH(OBJ.account.TAG.note_time, SERV.rtime);
sysmessage("Note added to account " + OBJ.account.name + "!");
OBJ.dialog(d_sphereplayernotes);
OBJ = LOCAL.oldobj;
[EOF]
